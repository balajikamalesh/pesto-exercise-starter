{"version":3,"sources":["sound/smb_coin.wav","sound/smb_mariodie.wav","components/snake.js","components/bait.js","components/score.js","components/difficultylevel.js","components/instructions.js","components/gameover.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","snakeSquares","map","dot","i","style","top","left","length","className","key","isNear","data-tooltip","highScore","currentScore","marginTop","textAlign","type","id","onClick","handler","name","htmlFor","isGameOver","border","reason","getRandomPositionForBait","Math","floor","random","App","state","bait","speed","direction","gameOverReason","score","snake","Array","keys","x","onKeyDown","event","keyCode","setState","moveSnake","snakeDots","headOfSnake","JSON","stringify","indexOf","gameOver","push","shift","abs","document","getElementById","play","max","setSpeed","difficulty","start","window","myTimer","setInterval","clearInterval","gameOverSound","volume","reset","onkeydown","this","src","point","preload","marginLeft","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6876d9c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smb_coin.a3676413.wav\";","module.exports = __webpack_public_path__ + \"static/media/smb_mariodie.9f02f1b1.wav\";","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      {props.snakeSquares.map((dot, i) => {\r\n            const style = {\r\n              top: `${dot[0]}%`,\r\n              left: `${dot[1]}%`\r\n            }\r\n            if(i === props.snakeSquares.length - 1){\r\n              return (\r\n                <div className=\"snake-head\" key={i} style={style}></div>\r\n              )\r\n            } else {\r\n              if(i%2 === 0) {\r\n                return (\r\n                  <div className=\"snake-body-1\" key={i} style={style}></div>\r\n                )\r\n              } else {\r\n                return (\r\n                  <div className=\"snake-body-2\" key={i} style={style}></div>\r\n                )\r\n              }\r\n            }\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n  const style = {\r\n    top: `${props.dot[0]}%`,\r\n    left: `${props.dot[1]}%`\r\n  }  \r\n\r\n  if(props.isNear){\r\n    return (\r\n      <div className=\"snake-bait\" style={style} data-tooltip=\"AGHHH!!! DON'T EAT ME!!!\"></div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"snake-bait-far\" style={style}></div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <h1>High Score: {props.highScore} </h1>\r\n      <h1>Score: {props.currentScore} </h1>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div style={{marginTop: '40px',textAlign: 'center'}}>\r\n      <h1>Difficulty Level</h1>\r\n      <form>\r\n        <div className=\"radio-toolbar\">\r\n            <input type=\"radio\" id=\"easy\" onClick={() => props.handler('easy')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\">Easy</label>\r\n            <input type=\"radio\" id=\"medium\" onClick={() => props.handler('medium')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\">Medium</label>\r\n            <input type=\"radio\" id=\"hard\" onClick={() => props.handler('hard')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\"><span></span>Hard</label>\r\n            <input type=\"radio\" id=\"pesto\" onClick={() => props.handler('pesto')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\"><span></span>PESTO</label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div style={{marginTop: '40px'}}>\r\n      <h1>Instructions</h1>\r\n      <ol>\r\n        <li>Select difficulty level and click on 'Start' to start the game</li>\r\n        <li>Use arrow keys (TOP, BOTTOM, LEFT, RIGHT) to control the snake</li>\r\n        <li>Press 'Reset' to restart the game</li>\r\n      </ol>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  if(props.isGameOver){\r\n    return (\r\n      <div style={{marginTop: '20px',border: '5px solid black'}}>\r\n        <h1>☹ GAME OVER ☹</h1>\r\n        <h3>{props.reason}</h3>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div></div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Snake from './components/snake';\r\nimport Bait from './components/bait';\r\nimport Score from './components/score';\r\nimport DifficultyLevel from './components/difficultylevel';\r\nimport Instructions from './components/instructions';\r\nimport Gameover from './components/gameover';\r\nimport point from './sound/smb_coin.wav';\r\nimport gameOver from './sound/smb_mariodie.wav';\r\n\r\n\r\nconst getRandomPositionForBait = () => {\r\n  let min = 1, max = 98;\r\n  let x = Math.floor((Math.random() * (min + (max - min + 1))) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (min + (max - min + 1))) / 2) * 2;\r\n  return [x, y];\r\n}\r\n\r\nclass App extends React.Component {\r\n  \r\n  state = {\r\n    bait: getRandomPositionForBait(),\r\n    speed: 0,\r\n    direction: 'R',\r\n    isGameOver: false,\r\n    gameOverReason: '',\r\n    isNear: false,\r\n    score: 0,\r\n    highScore: 0,\r\n    snake: [...Array(5).keys()].map(x => [0, 2*x])\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.onkeydown = this.onKeyDown;\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    let headOfSnake = this.state.snake[this.state.snake.length - 1];\r\n    if((headOfSnake[0] > 98 || headOfSnake[1] > 98 || headOfSnake[0] < 0 || headOfSnake[1] < 0) && !this.state.isGameOver){\r\n      this.gameOver('Boundary Collision!!!');\r\n    }\r\n  }\r\n\r\n  onKeyDown = (event) => {\r\n    if(event.keyCode === 38 && this.state.direction !== 'D')\r\n      this.setState({direction: 'U'});  \r\n    if(event.keyCode === 39 && this.state.direction !== 'L')\r\n      this.setState({direction: 'R'});\r\n    if(event.keyCode === 40 && this.state.direction !== 'U')\r\n      this.setState({direction: 'D'});  \r\n    if(event.keyCode === 37 && this.state.direction !== 'R') \r\n      this.setState({direction: 'L'});\r\n    \r\n  }\r\n\r\n  moveSnake = () => {\r\n    let snakeDots = [...this.state.snake];\r\n    let headOfSnake = snakeDots[snakeDots.length - 1];\r\n    if(this.state.direction === 'R')\r\n      headOfSnake = [headOfSnake[0] ,headOfSnake[1] + 2];\r\n    else if(this.state.direction === 'L')\r\n      headOfSnake = [headOfSnake[0] ,headOfSnake[1] - 2];\r\n    else if(this.state.direction === 'D')\r\n      headOfSnake = [headOfSnake[0] + 2,headOfSnake[1]];\r\n    else\r\n      headOfSnake = [headOfSnake[0] - 2,headOfSnake[1]];\r\n\r\n      //self collision\r\n      if(JSON.stringify(snakeDots).indexOf(JSON.stringify(headOfSnake)) >= 0){\r\n        this.gameOver('Self Collision!!!');\r\n      }\r\n\r\n    snakeDots.push(headOfSnake);\r\n    snakeDots.shift();\r\n\r\n    if((Math.abs(this.state.bait[0] - headOfSnake[0]) < 15) \r\n        && (Math.abs(this.state.bait[1] - headOfSnake[1]) < 15)) {\r\n      this.setState({isNear: true})\r\n    } else {\r\n      this.setState({isNear: false})\r\n    }\r\n\r\n    //found\r\n    if(this.state.bait[0] === headOfSnake[0] && this.state.bait[1] === headOfSnake[1]){\r\n      document.getElementById('pointSound').play();\r\n      snakeDots.push(headOfSnake);\r\n      this.setState({snake: snakeDots,\r\n                     bait: getRandomPositionForBait(),\r\n                     score: this.state.score + 1,\r\n                     highScore: Math.max(this.state.highScore, this.state.score + 1)})\r\n    }\r\n\r\n    this.setState({snake: snakeDots});\r\n  }\r\n\r\n  setSpeed = (difficulty) => {\r\n      switch(difficulty){\r\n        case 'easy':\r\n          this.setState({speed: 1});\r\n          break;\r\n        case 'medium':\r\n          this.setState({speed: 2});\r\n          break;\r\n        case 'hard':\r\n          this.setState({speed: 3});\r\n          break;\r\n        case 'pesto':\r\n          this.setState({speed: 6});\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n  }\r\n\r\n  start = () => {\r\n    if(this.state.speed !== 0 && !this.state.isGameOver)\r\n      window.myTimer = setInterval(this.moveSnake, (200/this.state.speed));\r\n  }\r\n\r\n  gameOver = (reason) => {\r\n    clearInterval(window.myTimer);\r\n    this.setState({isGameOver: true,gameOverReason: reason});\r\n    let gameOverSound = document.getElementById('gameOverSound');\r\n    gameOverSound.volume = 0.5;\r\n    gameOverSound.play();\r\n  } \r\n\r\n  reset = () => {\r\n    clearInterval(window.myTimer);\r\n    this.setState({\r\n      bait: getRandomPositionForBait(),\r\n      snake: [...Array(5).keys()].map(x => [0, 2*x]),\r\n      direction: 'R',\r\n      isGameOver: false,\r\n      isNear: false,\r\n      score: 0\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <audio id=\"pointSound\" src={point} preload=\"auto\"></audio>\r\n        <audio id=\"gameOverSound\" src={gameOver} preload=\"auto\"></audio>\r\n        <h1>SNAKE MANIA</h1>\r\n        <div className=\"game-layout\">\r\n          <Snake snakeSquares={this.state.snake} />\r\n          <Bait dot={this.state.bait} isNear={this.state.isNear}/> \r\n        </div>\r\n        <div className=\"information\">\r\n          <Score currentScore={this.state.score} highScore={this.state.highScore} />\r\n          <DifficultyLevel handler={this.setSpeed}/>\r\n          <div style={{marginLeft: '120px'}}>\r\n            <button onClick={() => this.start()}>Start</button>\r\n            <button onClick={() => this.reset()}>Reset</button>\r\n          </div>\r\n          <Instructions />\r\n          <Gameover isGameOver={this.state.isGameOver} reason={this.state.gameOverReason}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}