{"version":3,"sources":["sound/smb_coin.wav","sound/smb_mariodie.wav","components/snake.js","components/bait.js","components/obstable.js","components/score.js","components/difficultylevel.js","components/instructions.js","components/gameover.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","snakeSquares","map","dot","i","style","top","left","length","className","key","isNear","data-tooltip","positions","speed","highScore","easy","medium","hard","PESTO","currentScore","marginTop","textAlign","type","id","onClick","handler","name","htmlFor","isGameOver","border","reason","getRandomPositionForBait","Math","floor","random","getObstaclesPositions","x","y","App","useState","bait","setBait","obstacles1","setObstacles1","obstacles2","setObstacles2","obstacles3","setObstacles3","obstacles4","setObstacles4","obstacles5","setObstacles5","setSpeed","direction","setDirection","setIsGameOver","gameOverReason","setGameOverReason","setIsNear","score","setScore","setHighScore","Array","keys","snake","setSnake","onKeyDown","event","keyCode","moveSnake","snakeArray","headOfSnake","JSON","stringify","indexOf","gameOver","push","shift","abs","document","getElementById","play","max","clearInterval","window","myTimer","gameOverSound","volume","useEffect","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","onscroll","scrollTo","onkeydown","func","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","setInterval","src","pointSound","preload","difficulty","marginLeft","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25abef5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smb_coin.a3676413.wav\";","module.exports = __webpack_public_path__ + \"static/media/smb_mariodie.9f02f1b1.wav\";","import React from 'react';\r\n\r\nexport default (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      {props.snakeSquares.map((dot, i) => {\r\n            const style = {\r\n              top: `${dot[0]}%`,\r\n              left: `${dot[1]}%`\r\n            }\r\n            if(i === props.snakeSquares.length - 1){\r\n              return (\r\n                <div className=\"snake-head\" key={i} style={style}></div>\r\n              )\r\n            } else {\r\n              if(i%2 === 0) {\r\n                return (\r\n                  <div className=\"snake-body-1\" key={i} style={style}></div>\r\n                )\r\n              } else {\r\n                return (\r\n                  <div className=\"snake-body-2\" key={i} style={style}></div>\r\n                )\r\n              }\r\n            }\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n  const style = {\r\n    top: `${props.dot[0]}%`,\r\n    left: `${props.dot[1]}%`\r\n  }  \r\n\r\n  if(props.isNear){\r\n    return (\r\n      <div className=\"snake-bait\" style={style} data-tooltip=\"AGHHH!!! DON'T EAT ME!!!\"></div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"snake-bait-far\" style={style}></div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return(\r\n    <div>\r\n      {props.positions.map((dot, i) => {\r\n            const style = {\r\n              top: `${dot[0]}%`,\r\n              left: `${dot[1]}%`\r\n            }\r\n              return (\r\n                <div className=\"obstacle\" key={i} style={style}></div>\r\n              )\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <h1>High Score: {\r\n                (props.speed === 1) ? props.highScore.easy : \r\n                (props.speed === 2 ? props.highScore.medium : (props.speed === 3 ? props.highScore.hard: props.highScore.PESTO )) \r\n              \r\n              } </h1>\r\n      <h1>Score: {props.currentScore} </h1>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div style={{marginTop: '40px',textAlign: 'center'}}>\r\n      <h1>Difficulty Level</h1>\r\n      <form>\r\n        <div className=\"radio-toolbar\">\r\n            <input type=\"radio\" id=\"easy\" onClick={() => props.handler('easy')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\">Easy</label>\r\n            <input type=\"radio\" id=\"medium\" onClick={() => props.handler('medium')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\">Medium</label>\r\n            <input type=\"radio\" id=\"hard\" onClick={() => props.handler('hard')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\"><span></span>Hard</label>\r\n            <input type=\"radio\" id=\"pesto\" onClick={() => props.handler('pesto')} name=\"difficulty\" />\r\n            <label htmlFor=\"easy\"><span></span>PESTO</label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div style={{marginTop: '40px'}}>\r\n      <h1>Instructions</h1>\r\n      <ol>\r\n        <li>Use arrow keys (TOP, BOTTOM, LEFT, RIGHT) to control the snake</li>\r\n        <li>Avoid the purple colored obstacles</li>\r\n        <li>To restart game, select difficulty level and click on 'Reset'</li>\r\n      </ol>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  if(props.isGameOver){\r\n    return (\r\n      <div style={{marginTop: '20px',border: '5px solid black'}}>\r\n        <h1>☹ GAME OVER ☹</h1>\r\n        <h3>{props.reason}</h3>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div></div>\r\n    )\r\n  }\r\n}","import React , {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport Snake from './components/snake';\r\nimport Bait from './components/bait';\r\nimport Obstacles1 from './components/obstable';\r\nimport Obstacles2 from './components/obstable';\r\nimport Obstacles3 from './components/obstable';\r\nimport Obstacles4 from './components/obstable';\r\nimport Obstacles5 from './components/obstable';\r\nimport Score from './components/score';\r\nimport DifficultyLevel from './components/difficultylevel';\r\nimport Instructions from './components/instructions';\r\nimport Gameover from './components/gameover';\r\nimport pointSound from './sound/smb_coin.wav';\r\nimport gameOverSound from './sound/smb_mariodie.wav';\r\n\r\n\r\nconst getRandomPositionForBait = () => {\r\n  let min = 1, max = 98;\r\n  let x = Math.floor((Math.random() * (min + (max - min + 1))) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (min + (max - min + 1))) / 2) * 2;\r\n  return [x, y];\r\n}\r\n\r\nconst getObstaclesPositions = () => {\r\n  let min = 6, max = 94;\r\n  let x = Math.floor((Math.random() * (min + (max - min + 1))) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (min + (max - min + 1))) / 2) * 2;\r\n  return Math.random() > 0.5 ? [[x,y],[x+1,y],[x+2,y],[x+3,y],[x+4,y],[x+5,y]] : \r\n                               [[x,y],[x,y+1],[x,y+2],[x,y+3],[x,y+4],[x,y+5]]; \r\n}\r\n\r\nfunction App() {\r\n  \r\n  const [bait, setBait] = useState(getRandomPositionForBait()); \r\n  const [obstacles1, setObstacles1] = useState(getObstaclesPositions());\r\n  const [obstacles2, setObstacles2] = useState(getObstaclesPositions());\r\n  const [obstacles3, setObstacles3] = useState(getObstaclesPositions());\r\n  const [obstacles4, setObstacles4] = useState(getObstaclesPositions());\r\n  const [obstacles5, setObstacles5] = useState(getObstaclesPositions());\r\n  const [speed, setSpeed] = useState(2);\r\n  const [direction, setDirection] = useState('R');\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [gameOverReason, setGameOverReason] = useState('');\r\n  const [isNear, setIsNear] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState({'easy': 0,'medium': 0,'hard': 0,'PESTO': 0});\r\n  const [snake, setSnake] = useState([...Array(5).keys()].map(x => [0, 2*x]));\r\n\r\n  useEffect(() => {\r\n    let scrollTop = window.pageYOffset || document.documentElement.scrollTop; \r\n    let scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n    window.onscroll = function() { \r\n      window.scrollTo(scrollLeft, scrollTop); \r\n    }; \r\n\r\n    document.onkeydown = debounce(onKeyDown, 200/speed);\r\n    if(speed !== 0 && !isGameOver){\r\n      window.myTimer = setInterval(moveSnake, (200/speed));\r\n    }\r\n\r\n    let headOfSnake = snake[snake.length - 1];\r\n    if((headOfSnake[0] > 98 || headOfSnake[1] > 98 || headOfSnake[0] < 0 || headOfSnake[1] < 0) && !isGameOver){\r\n      gameOver('Boundary Collision!!!');\r\n    }\r\n\r\n    return () => clearInterval(window.myTimer);  \r\n  },[direction, isGameOver, speed, moveSnake, onKeyDown, snake])\r\n\r\n  function debounce(func, delay) {\r\n    var timer = null;\r\n    return function () {\r\n      var context = this, \r\n      args = arguments;\r\n      clearTimeout(timer);\r\n        timer = setTimeout(function () {\r\n        func.apply(context, args);\r\n      }, delay);\r\n    };\r\n  }\r\n\r\n  function onKeyDown(event) {\r\n    if(event.keyCode === 38 && direction !== 'D')\r\n      setDirection('U');  \r\n    if(event.keyCode === 39 && direction !== 'L')\r\n      setDirection('R');\r\n    if(event.keyCode === 40 && direction !== 'U')\r\n      setDirection('D');  \r\n    if(event.keyCode === 37 && direction !== 'R') \r\n      setDirection('L'); \r\n  }\r\n\r\n  function moveSnake() {\r\n    let snakeArray = [...snake];\r\n    let headOfSnake = snakeArray[snakeArray.length - 1];\r\n      if(direction === 'R')\r\n        headOfSnake = [headOfSnake[0] ,headOfSnake[1] + 2];\r\n      else if(direction === 'L')\r\n        headOfSnake = [headOfSnake[0] ,headOfSnake[1] - 2];\r\n      else if(direction === 'D')\r\n        headOfSnake = [headOfSnake[0] + 2,headOfSnake[1]];\r\n      else\r\n        headOfSnake = [headOfSnake[0] - 2,headOfSnake[1]];\r\n\r\n        //self collision\r\n        if(JSON.stringify(snakeArray).indexOf(JSON.stringify(headOfSnake)) >= 0){\r\n            gameOver('Self Collision!!!');\r\n        }\r\n\r\n        if(JSON.stringify(obstacles1).indexOf(JSON.stringify(headOfSnake)) >= 0\r\n          || JSON.stringify(obstacles2).indexOf(JSON.stringify(headOfSnake)) >= 0\r\n          || JSON.stringify(obstacles3).indexOf(JSON.stringify(headOfSnake)) >= 0\r\n          || JSON.stringify(obstacles4).indexOf(JSON.stringify(headOfSnake)) >= 0\r\n          || JSON.stringify(obstacles5).indexOf(JSON.stringify(headOfSnake)) >= 0){\r\n          gameOver('Obstacle Collision!!!');\r\n        }\r\n\r\n        snakeArray.push(headOfSnake);\r\n        snakeArray.shift();\r\n\r\n      if((Math.abs(bait[0] - headOfSnake[0]) < 15) \r\n          && (Math.abs(bait[1] - headOfSnake[1]) < 15)) {\r\n        setIsNear(true)\r\n      } else {\r\n        setIsNear(false)\r\n      }\r\n\r\n      //found\r\n      if(bait[0] === headOfSnake[0] && bait[1] === headOfSnake[1]) {\r\n        document.getElementById('pointSound').play();\r\n        snakeArray.push(headOfSnake);\r\n        setSnake(snakeArray);\r\n        setBait(getRandomPositionForBait());\r\n        setScore(score + 1);\r\n        if(speed === 1)\r\n          setHighScore({...highScore , easy: Math.max(highScore['easy'], score + 1)});\r\n        else if(speed === 2)\r\n          setHighScore({...highScore , medium: Math.max(highScore['medium'], score + 1)});\r\n        else if(speed === 3)\r\n          setHighScore({...highScore , hard: Math.max(highScore['hard'], score + 1)});\r\n        else\r\n          setHighScore({...highScore , PESTO: Math.max(highScore['PESTO'], score + 1)});\r\n      }\r\n\r\n      setSnake(snakeArray);\r\n  }\r\n\r\n  function setSpeedofSnake(difficulty) {\r\n      switch(difficulty){\r\n        case 'easy':\r\n          setSpeed(1);\r\n          break;\r\n        case 'medium':\r\n          setSpeed(2);\r\n          break;\r\n        case 'hard':\r\n          setSpeed(3);\r\n          break;\r\n        case 'pesto':\r\n          setSpeed(6);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n  }\r\n\r\n  function gameOver(reason) {\r\n    clearInterval(window.myTimer);\r\n    setIsGameOver(true);\r\n    setGameOverReason(reason)\r\n    let gameOverSound = document.getElementById('gameOverSound');\r\n    gameOverSound.volume = 0.5;\r\n    gameOverSound.play();\r\n  } \r\n\r\n  function reset(){\r\n    setBait(getRandomPositionForBait());\r\n    setSnake([...Array(5).keys()].map(x => [0, 2*x]));\r\n    setDirection('R');\r\n    setIsGameOver(false);\r\n    setIsNear(false);\r\n    setScore(0);\r\n    setObstacles1(getObstaclesPositions());\r\n    setObstacles2(getObstaclesPositions());\r\n    setObstacles3(getObstaclesPositions());\r\n    setObstacles4(getObstaclesPositions());\r\n    setObstacles5(getObstaclesPositions());\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <audio id=\"pointSound\" src={pointSound} preload=\"auto\"></audio>\r\n        <audio id=\"gameOverSound\" src={gameOverSound} preload=\"auto\"></audio>\r\n        <h1>SNAKE MANIA</h1>\r\n        <div className=\"game-layout\">\r\n          <Snake snakeSquares={snake} />\r\n          <Obstacles1 positions={obstacles1}/>\r\n          <Obstacles2 positions={obstacles2}/>\r\n          <Obstacles3 positions={obstacles3}/>\r\n          <Obstacles4 positions={obstacles4}/>\r\n          <Obstacles5 positions={obstacles5}/>\r\n          <Bait dot={bait} isNear={isNear}/> \r\n        </div>\r\n        <div className=\"information\">\r\n          <Score currentScore={score} highScore={highScore} speed={speed}/>\r\n          <DifficultyLevel handler={setSpeedofSnake}/>\r\n          <div style={{marginLeft: '200px'}}>\r\n            <button onClick={() => reset()}>Reset</button>\r\n          </div>\r\n          <Instructions />\r\n          <Gameover isGameOver={isGameOver} reason={gameOverReason}/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}